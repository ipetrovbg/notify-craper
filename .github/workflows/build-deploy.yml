name: Deploy main branch

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: bootstrap


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust x86_64-unknown-linux-musl
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
#          target: x86_64-unknown-linux-musl
#          override: true
#          components: rustfmt, clippy
      - name: Add linux-musl target
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo apt install musl-tools pkg-config libssl-dev
          cargo clean
          OPENSSL_LIB_DIR="/usr/lib/x86_64-linux-gnu"
          OPENSSL_INCLUDE_DIR="/usr/include/openssl"
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-musl
#      - name: Debug print
#        run: ls -Rs
      - name: Move binaries
        run: mv target/x86_64-unknown-linux-musl/release/${{ env.BINARY_NAME }} bootstrap
      - name: Serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#      - uses: actions/upload-artifact@v2
#        with:
#          name: scrapnotify-artifacts
#          path: target/x86_64-unknown-linux-musl/release

#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/download-artifact@v2
#        with:
#          name: scrapnotify-artifacts
#          path: target/x86_64-unknown-linux-musl/release
#      - name: Display download artifacts
#        run: ls -R
#        working-directory: target/x86_64-unknown-linux-musl/release
#      - name: Move binaries
#        run: mv target/x86_64-unknown-linux-musl/release/${{ env.BINARY_NAME }} bootstrap
#
#      - name: Serverless deploy
#        uses: serverless/github-action@v3.1
#        with:
#          args: deploy
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}